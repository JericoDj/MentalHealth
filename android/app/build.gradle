    plugins {
        id "com.android.application"
        id "com.google.gms.google-services" // Firebase
        id "org.jetbrains.kotlin.android"
        id "kotlin-android"
        id "dev.flutter.flutter-gradle-plugin"
    }

    def localProperties = new Properties()
    def localPropertiesFile = rootProject.file('local.properties')
    if (localPropertiesFile.exists()) {
        localPropertiesFile.withReader('UTF-8') { reader ->
            localProperties.load(reader)
        }
    }

    def keystoreProperties = new Properties()
    def keystorePropertiesFile = rootProject.file("key.properties")
    println "üìç Gradle is looking for key.properties at: ${keystorePropertiesFile.absolutePath}"
    if (keystorePropertiesFile.exists()) {
        keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
    }

    def flutterVersionCode = localProperties.getProperty('flutter.versionCode') ?: '1'
    def flutterVersionName = localProperties.getProperty('flutter.versionName') ?: '1.0'

    android {
        namespace "com.llps.mental_health.llps_mental_app"
        compileSdk flutter.compileSdkVersion
        ndkVersion flutter.ndkVersion

        defaultConfig {
            applicationId "com.llps.mental_health.llps_mental_app"
            minSdkVersion 24
            targetSdkVersion 34
            versionCode flutterVersionCode.toInteger()
            versionName flutterVersionName
        }

        signingConfigs {
            release {
                def alias = keystoreProperties['keyAlias']
                def keyPwd = keystoreProperties['keyPassword']
                def storePwd = keystoreProperties['storePassword']
                def storeFilePath = keystoreProperties['storeFile']



                println "üîç keyAlias: ${keystoreProperties['keyAlias']}"
                println "üîç keyPassword: ${keystoreProperties['keyPassword']}"
                println "üîç storePassword: ${keystoreProperties['storePassword']}"
                println "üîç storeFile: ${keystoreProperties['storeFile']}"

                keyAlias alias
                keyPassword keyPwd
                storeFile file(storeFilePath)
                storePassword storePwd
            }
        }


        buildTypes {
            release {
                signingConfig signingConfigs.release
                minifyEnabled false
                shrinkResources false
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            }
        }

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_17
            targetCompatibility JavaVersion.VERSION_17
        }

        kotlinOptions {
            jvmTarget = '17'
        }

        sourceSets {
            main.java.srcDirs += 'src/main/kotlin'
        }
    }

    flutter {
        source '../..'
    }

    dependencies {
        implementation platform("com.google.firebase:firebase-bom:32.7.0")
        implementation 'com.google.firebase:firebase-analytics-ktx'
        implementation 'com.google.firebase:firebase-auth-ktx'
        // Add more Firebase modules as needed
    }
